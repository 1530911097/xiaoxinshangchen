{"remainingRequest":"E:\\HBuilderProjects\\supermall1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HBuilderProjects\\supermall1\\src\\components\\common\\swiper\\Swiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HBuilderProjects\\supermall1\\src\\components\\common\\swiper\\Swiper.vue","mtime":1616157260262},{"path":"E:\\HBuilderProjects\\supermall1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613721357303},{"path":"E:\\HBuilderProjects\\supermall1\\node_modules\\babel-loader\\lib\\index.js","mtime":1613721456817},{"path":"E:\\HBuilderProjects\\supermall1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613721357303},{"path":"E:\\HBuilderProjects\\supermall1\\node_modules\\vue-loader\\lib\\index.js","mtime":1613721440296}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tname: \"Swiper\",\n\tprops: {\n\t\tinterval: {\n\t\t\ttype: Number,\n\t\t\tdefault: 3000\n\t\t},\n\t\tanimDuration: {\n\t\t\ttype: Number,\n\t\t\tdefault: 300\n\t\t},\n\t\tmoveRatio: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0.25\n\t\t},\n\t\tshowIndicator: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t}\n\t},\n\tdata: function() {\n\t\treturn {\n\t\t\tslideCount: 0, // 元素个数\n\t\t\ttotalWidth: 0, // swiper的宽度\n\t\t\tswiperStyle: {}, // swiper样式\n\t\t\tcurrentIndex: 1, // 当前的index\n\t\t\tscrolling: false, // 是否正在滚动\n\t\t}\n\t},\n\tmounted: function() {\n\t\t// 1.操作DOM, 在前后添加Slide\n\t\tsetTimeout(() => {\n\t\t\tthis.handleDom();\n\n\t\t\t// 2.开启定时器\n\t\t\tthis.startTimer();\n\t\t}, 1000)\n\t},\n\tmethods: {\n\t\t/**\n\t\t * 定时器操作\n\t\t */\n\t\tstartTimer: function() {\n\t\t\tthis.playTimer = window.setInterval(() => {\n\t\t\t\tthis.currentIndex++;\n\t\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\n\t\t\t}, this.interval)\n\t\t},\n\t\tstopTimer: function() {\n\t\t\twindow.clearInterval(this.playTimer);\n\t\t},\n\n\t\t/**\n\t\t * 滚动到正确的位置\n\t\t */\n\t\tscrollContent: function(currentPosition) {\n\t\t\t// 0.设置正在滚动\n\t\t\tthis.scrolling = true;\n\n\t\t\t// 1.开始滚动动画\n\t\t\tthis.swiperStyle.transition = 'transform ' + this.animDuration + 'ms';\n\t\t\tthis.setTransform(currentPosition);\n\n\t\t\t// 2.判断滚动到的位置\n\t\t\tthis.checkPosition();\n\n\t\t\t// 4.滚动完成\n\t\t\tthis.scrolling = false\n\t\t},\n\n\t\t/**\n\t\t * 校验正确的位置\n\t\t */\n\t\tcheckPosition: function() {\n\t\t\twindow.setTimeout(() => {\n\t\t\t\t// 1.校验正确的位置\n\t\t\t\tthis.swiperStyle.transition = '0ms';\n\t\t\t\tif (this.currentIndex >= this.slideCount + 1) {\n\t\t\t\t\tthis.currentIndex = 1;\n\t\t\t\t\tthis.setTransform(-this.currentIndex * this.totalWidth);\n\t\t\t\t} else if (this.currentIndex <= 0) {\n\t\t\t\t\tthis.currentIndex = this.slideCount;\n\t\t\t\t\tthis.setTransform(-this.currentIndex * this.totalWidth);\n\t\t\t\t}\n\n\t\t\t\t// 2.结束移动后的回调\n\t\t\t\tthis.$emit('transitionEnd', this.currentIndex - 1);\n\t\t\t}, this.animDuration)\n\t\t},\n\n\t\t/**\n\t\t * 设置滚动的位置\n\t\t */\n\t\tsetTransform: function(position) {\n\t\t\tthis.swiperStyle.transform = `translate3d(${position}px, 0, 0)`;\n\t\t\tthis.swiperStyle['-webkit-transform'] = `translate3d(${position}px), 0, 0`;\n\t\t\tthis.swiperStyle['-ms-transform'] = `translate3d(${position}px), 0, 0`;\n\t\t},\n\n\t\t/**\n\t\t * 操作DOM, 在DOM前后添加Slide\n\t\t */\n\t\thandleDom: function() {\n\t\t\t// 1.获取要操作的元素\n\t\t\tlet swiperEl = document.querySelector('.swiper');\n\t\t\tlet slidesEls = swiperEl.getElementsByClassName('slide');\n\n\t\t\t// 2.保存个数\n\t\t\tthis.slideCount = slidesEls.length;\n\n\t\t\t// 3.如果大于1个, 那么在前后分别添加一个slide\n\t\t\tif (this.slideCount > 1) {\n\t\t\t\tlet cloneFirst = slidesEls[0].cloneNode(true);\n\t\t\t\tlet cloneLast = slidesEls[this.slideCount - 1].cloneNode(true);\n\t\t\t\tswiperEl.insertBefore(cloneLast, slidesEls[0]);\n\t\t\t\tswiperEl.appendChild(cloneFirst);\n\t\t\t\tthis.totalWidth = swiperEl.offsetWidth;\n\t\t\t\tthis.swiperStyle = swiperEl.style;\n\t\t\t}\n\n\t\t\t// 4.让swiper元素, 显示第一个(目前是显示前面添加的最后一个元素)\n\t\t\tthis.setTransform(-this.totalWidth);\n\t\t},\n\n\t\t/**\n\t\t * 拖动事件的处理\n\t\t */\n\t\ttouchStart: function(e) {\n\t\t\t// 1.如果正在滚动, 不可以拖动\n\t\t\tif (this.scrolling) return;\n\n\t\t\t// 2.停止定时器\n\t\t\tthis.stopTimer();\n\n\t\t\t// 3.保存开始滚动的位置\n\t\t\tthis.startX = e.touches[0].pageX;\n\t\t},\n\n\t\ttouchMove: function(e) {\n\t\t\t// 1.计算出用户拖动的距离\n\t\t\tthis.currentX = e.touches[0].pageX;\n\t\t\tthis.distance = this.currentX - this.startX;\n\t\t\tlet currentPosition = -this.currentIndex * this.totalWidth;\n\t\t\tlet moveDistance = this.distance + currentPosition;\n\n\t\t\t// 2.设置当前的位置\n\t\t\tthis.setTransform(moveDistance);\n\t\t},\n\n\t\ttouchEnd: function(e) {\n\t\t\t// 1.获取移动的距离\n\t\t\tlet currentMove = Math.abs(this.distance);\n\n\t\t\t// 2.判断最终的距离\n\t\t\tif (this.distance === 0) {\n\t\t\t\treturn\n\t\t\t} else if (this.distance > 0 && currentMove > this.totalWidth * this.moveRatio) { // 右边移动超过0.5\n\t\t\t\tthis.currentIndex--\n\t\t\t} else if (this.distance < 0 && currentMove > this.totalWidth * this.moveRatio) { // 向左移动超过0.5\n\t\t\t\tthis.currentIndex++\n\t\t\t}\n\n\t\t\t// 3.移动到正确的位置\n\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\n\n\t\t\t// 4.移动完成后重新开启定时器\n\t\t\tthis.startTimer();\n\t\t},\n\n\t\t/**\n\t\t * 控制上一个, 下一个\n\t\t */\n\t\tprevious: function() {\n\t\t\tthis.changeItem(-1);\n\t\t},\n\n\t\tnext: function() {\n\t\t\tthis.changeItem(1);\n\t\t},\n\n\t\tchangeItem: function(num) {\n\t\t\t// 1.移除定时器\n\t\t\tthis.stopTimer();\n\n\t\t\t// 2.修改index和位置\n\t\t\tthis.currentIndex += num;\n\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\n\n\t\t\t// 3.添加定时器\n\t\t\tthis.startTimer();\n\t\t}\n\t}\n}\n",{"version":3,"sources":["Swiper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"Swiper.vue","sourceRoot":"src/components/common/swiper","sourcesContent":["<template>\r\n\t<div id=\"swiper\">\r\n\t\t<div class=\"swiper\" @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\">\r\n\t\t\t<slot name=\"swiper\"></slot>\r\n\t\t</div>\r\n\t\t<slot name=\"indicator\">\r\n\t\t</slot>\r\n\t\t<div class=\"indicator\">\r\n\t\t\t<slot name=\"indicator\" v-if=\"showIndicator && slideCount>1\">\r\n\t\t\t\t<div v-for=\"(item, index) in slideCount\" class=\"indi-item\" :class=\"{active: index === currentIndex-1}\"\r\n\t\t\t\t\t:key=\"index\"></div>\r\n\t\t\t</slot>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tname: \"Swiper\",\r\n\t\tprops: {\r\n\t\t\tinterval: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 3000\r\n\t\t\t},\r\n\t\t\tanimDuration: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 300\r\n\t\t\t},\r\n\t\t\tmoveRatio: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0.25\r\n\t\t\t},\r\n\t\t\tshowIndicator: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function() {\r\n\t\t\treturn {\r\n\t\t\t\tslideCount: 0, // 元素个数\r\n\t\t\t\ttotalWidth: 0, // swiper的宽度\r\n\t\t\t\tswiperStyle: {}, // swiper样式\r\n\t\t\t\tcurrentIndex: 1, // 当前的index\r\n\t\t\t\tscrolling: false, // 是否正在滚动\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function() {\r\n\t\t\t// 1.操作DOM, 在前后添加Slide\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.handleDom();\r\n\r\n\t\t\t\t// 2.开启定时器\r\n\t\t\t\tthis.startTimer();\r\n\t\t\t}, 1000)\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * 定时器操作\r\n\t\t\t */\r\n\t\t\tstartTimer: function() {\r\n\t\t\t\tthis.playTimer = window.setInterval(() => {\r\n\t\t\t\t\tthis.currentIndex++;\r\n\t\t\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\r\n\t\t\t\t}, this.interval)\r\n\t\t\t},\r\n\t\t\tstopTimer: function() {\r\n\t\t\t\twindow.clearInterval(this.playTimer);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 滚动到正确的位置\r\n\t\t\t */\r\n\t\t\tscrollContent: function(currentPosition) {\r\n\t\t\t\t// 0.设置正在滚动\r\n\t\t\t\tthis.scrolling = true;\r\n\r\n\t\t\t\t// 1.开始滚动动画\r\n\t\t\t\tthis.swiperStyle.transition = 'transform ' + this.animDuration + 'ms';\r\n\t\t\t\tthis.setTransform(currentPosition);\r\n\r\n\t\t\t\t// 2.判断滚动到的位置\r\n\t\t\t\tthis.checkPosition();\r\n\r\n\t\t\t\t// 4.滚动完成\r\n\t\t\t\tthis.scrolling = false\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 校验正确的位置\r\n\t\t\t */\r\n\t\t\tcheckPosition: function() {\r\n\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\t// 1.校验正确的位置\r\n\t\t\t\t\tthis.swiperStyle.transition = '0ms';\r\n\t\t\t\t\tif (this.currentIndex >= this.slideCount + 1) {\r\n\t\t\t\t\t\tthis.currentIndex = 1;\r\n\t\t\t\t\t\tthis.setTransform(-this.currentIndex * this.totalWidth);\r\n\t\t\t\t\t} else if (this.currentIndex <= 0) {\r\n\t\t\t\t\t\tthis.currentIndex = this.slideCount;\r\n\t\t\t\t\t\tthis.setTransform(-this.currentIndex * this.totalWidth);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 2.结束移动后的回调\r\n\t\t\t\t\tthis.$emit('transitionEnd', this.currentIndex - 1);\r\n\t\t\t\t}, this.animDuration)\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置滚动的位置\r\n\t\t\t */\r\n\t\t\tsetTransform: function(position) {\r\n\t\t\t\tthis.swiperStyle.transform = `translate3d(${position}px, 0, 0)`;\r\n\t\t\t\tthis.swiperStyle['-webkit-transform'] = `translate3d(${position}px), 0, 0`;\r\n\t\t\t\tthis.swiperStyle['-ms-transform'] = `translate3d(${position}px), 0, 0`;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 操作DOM, 在DOM前后添加Slide\r\n\t\t\t */\r\n\t\t\thandleDom: function() {\r\n\t\t\t\t// 1.获取要操作的元素\r\n\t\t\t\tlet swiperEl = document.querySelector('.swiper');\r\n\t\t\t\tlet slidesEls = swiperEl.getElementsByClassName('slide');\r\n\r\n\t\t\t\t// 2.保存个数\r\n\t\t\t\tthis.slideCount = slidesEls.length;\r\n\r\n\t\t\t\t// 3.如果大于1个, 那么在前后分别添加一个slide\r\n\t\t\t\tif (this.slideCount > 1) {\r\n\t\t\t\t\tlet cloneFirst = slidesEls[0].cloneNode(true);\r\n\t\t\t\t\tlet cloneLast = slidesEls[this.slideCount - 1].cloneNode(true);\r\n\t\t\t\t\tswiperEl.insertBefore(cloneLast, slidesEls[0]);\r\n\t\t\t\t\tswiperEl.appendChild(cloneFirst);\r\n\t\t\t\t\tthis.totalWidth = swiperEl.offsetWidth;\r\n\t\t\t\t\tthis.swiperStyle = swiperEl.style;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 4.让swiper元素, 显示第一个(目前是显示前面添加的最后一个元素)\r\n\t\t\t\tthis.setTransform(-this.totalWidth);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 拖动事件的处理\r\n\t\t\t */\r\n\t\t\ttouchStart: function(e) {\r\n\t\t\t\t// 1.如果正在滚动, 不可以拖动\r\n\t\t\t\tif (this.scrolling) return;\r\n\r\n\t\t\t\t// 2.停止定时器\r\n\t\t\t\tthis.stopTimer();\r\n\r\n\t\t\t\t// 3.保存开始滚动的位置\r\n\t\t\t\tthis.startX = e.touches[0].pageX;\r\n\t\t\t},\r\n\r\n\t\t\ttouchMove: function(e) {\r\n\t\t\t\t// 1.计算出用户拖动的距离\r\n\t\t\t\tthis.currentX = e.touches[0].pageX;\r\n\t\t\t\tthis.distance = this.currentX - this.startX;\r\n\t\t\t\tlet currentPosition = -this.currentIndex * this.totalWidth;\r\n\t\t\t\tlet moveDistance = this.distance + currentPosition;\r\n\r\n\t\t\t\t// 2.设置当前的位置\r\n\t\t\t\tthis.setTransform(moveDistance);\r\n\t\t\t},\r\n\r\n\t\t\ttouchEnd: function(e) {\r\n\t\t\t\t// 1.获取移动的距离\r\n\t\t\t\tlet currentMove = Math.abs(this.distance);\r\n\r\n\t\t\t\t// 2.判断最终的距离\r\n\t\t\t\tif (this.distance === 0) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else if (this.distance > 0 && currentMove > this.totalWidth * this.moveRatio) { // 右边移动超过0.5\r\n\t\t\t\t\tthis.currentIndex--\r\n\t\t\t\t} else if (this.distance < 0 && currentMove > this.totalWidth * this.moveRatio) { // 向左移动超过0.5\r\n\t\t\t\t\tthis.currentIndex++\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 3.移动到正确的位置\r\n\t\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\r\n\r\n\t\t\t\t// 4.移动完成后重新开启定时器\r\n\t\t\t\tthis.startTimer();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 控制上一个, 下一个\r\n\t\t\t */\r\n\t\t\tprevious: function() {\r\n\t\t\t\tthis.changeItem(-1);\r\n\t\t\t},\r\n\r\n\t\t\tnext: function() {\r\n\t\t\t\tthis.changeItem(1);\r\n\t\t\t},\r\n\r\n\t\t\tchangeItem: function(num) {\r\n\t\t\t\t// 1.移除定时器\r\n\t\t\t\tthis.stopTimer();\r\n\r\n\t\t\t\t// 2.修改index和位置\r\n\t\t\t\tthis.currentIndex += num;\r\n\t\t\t\tthis.scrollContent(-this.currentIndex * this.totalWidth);\r\n\r\n\t\t\t\t// 3.添加定时器\r\n\t\t\t\tthis.startTimer();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t#swiper {\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.swiper {\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t.indicator {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tbottom: 8px;\r\n\t}\r\n\r\n\t.indi-item {\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 8px;\r\n\t\theight: 8px;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #fff;\r\n\t\tline-height: 8px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tmargin: 0 5px;\r\n\t}\r\n\r\n\t.indi-item.active {\r\n\t\tbackground-color: rgba(212, 62, 46, 1.0);\r\n\t}\r\n</style>\n"]}]}